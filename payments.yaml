openapi: 3.0.0
info:
  title: 'HiPay Enterprise Gateway API'
  description: "\nThe Gateway API allows you to get paid and manage orders and transactions.\n\nPlease note: this documentation describes the Gateway API parameters and response fields and allows you to test the platform in real time.\nThis page is to be used alongside the **[HiPay Enterprise Platform Overview documentation](/getting-started/platform-hipay-enterprise/overview/)**, which gives you more information and details on the HiPay Enterprise workflow. You may use both documents in parallel when integrating HiPay Enterprise.\n\n# Integration\n\nChoose from three types of integration to select the one best adapted to your business:\n\n## Hosted integration\n\nHiPay Enterprise hosts your payment page on a secured site. With this option you can benefit from a single point of contact, adaptable payment pages, and the PCI-DSS standard. You can therefore outsource heavy security requirements that are related to payment acceptance.\n\nIn order to use this integration, please refer to the **Generate Hosted Payment Page (`POST /hpayment`)** API service below.\n\n## iFrame integration\n\nThis is a hybrid solution in which the buyer remains on your website to make payment. In order to use this integration you need to generate a hosted payment page (as above) with a special template, allowing you to properly display it in an iFrame.\n\nFor more information, please refer to the **Generate Hosted Payment Page (`POST /hpayment`)** documentation below.\n\n## Integration via our API\n\nIn this case, the payment page is hosted on your website, allowing you to have a unified, fully customized workflow. Please refer to the **Request New Order API (`POST Order`)** below for more information.\n\nPlease note that if you want to execute transactions with credit or debit card payment products, you will need to tokenize card numbers beforehand by using the HiPay Enterprise Tokenization API.\n\n# Managing transactions\n\nOnce a transaction is executed, you may need to perform operations on it, such as a refund, a capture, etc. To do so, please refer to the `maintenance` web service.\n\nYou can also get all transaction details at any time by leveraging the `transaction` web services.\n\nBesides, you may need to be automatically informed when a transaction status gets updated. To this end, you need to leverage server-to-server notifications. For more information, please check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#server-to-server-notifications).\n\n# Web service information\n\n## Gateway API base URLs\n\n *\n| Environment | Base URL |\n| --- | --- |\n| Stage | [https://stage-secure-gateway.hipay-tpp.com/rest/](https://stage-secure-gateway.hipay-tpp.com/rest/) |\n| Production | [https://secure-gateway.hipay-tpp.com/rest/](https://secure-gateway.hipay-tpp.com/rest/) |\n\n## Authentication\n\nAll requests to the HiPay Enterprise API require identification through *HTTP Basic Authentication*. Your API credentials can be found in the Integration section of your HiPay Enterprise back office. Most HTTP clients (including web browsers) have built-in support for HTTP basic authentication. If not, the following header must be included in all HTTP requests.\n\n`Authorization: Basic base64('API login>:<API password>')`"
  contact:
    email: pi-commerce@hipay.com
  version: 1.0.0
servers:
  -
    url: 'https://stage-secure-gateway.hipay-tpp.com/rest/v1'
    description: Stage
  -
    url: 'https://secure-gateway.hipay-tpp.com/rest/v1'
    description: Production
paths:
  /hpayment:
    post:
      tags:
        - Payments
      summary: 'Creates a secure payment page to which you can redirect your customer to proceed checkout'
      description: "This service allows you to **redirect your user to a payment page (hosted by HiPay)** in order to proceed checkout. This service creates an order and returns a forward URL. This forward URL is dedicated to display a payment page with your CSS and validated payment products. After payment form validation, the checkout is processed and the user is being returned to your website.\n     <br />According to transaction state and `authentication_indicator` parameter (see below), the user will be redirected either to the accept or the decline page.\n    <br />There are two strategies for implementing this service:\n    <br />### Hosted: Full redirection mode\n    <br /> Once the payment page is created, you redirect your user to it. Your user is redirected back to your website once the transaction si executed.\n    <br />### iFrame mode\n    <br />You may also display the payment page in an iFrame, in order to have a unified checkout workflow. To do so, you have to provide the `template` parameter with the value `iframe-js` (see below)."
      operationId: generateHostedPaymentPage
      requestBody:
        description: 'HPayment information'
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/hpayment'
      responses:
        '200':
          description: 'Order successfully created and transaction executed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forward'
        '400':
          description: 'The request was rejected due to a validation error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 'An authentication error occurred/invalid credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 'Access to this resource is fordidden.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -
          basicAuth: []
  '/maintenance/transaction/{transaction_reference}':
    post:
      tags:
        - Maintenance
      summary: 'Performs a maintenance operation on a given transaction'
      description: 'Performs a maintenance operation on a given transaction.'
      operationId: performMaintenanceOperation
      parameters:
        -
          name: transaction_reference
          in: path
          description: 'The unique identifier of the transaction.'
          required: true
          schema:
            type: string
          example: '800000420435'
      requestBody:
        description: 'Maintenance information'
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Maintenance'
      responses:
        '200':
          description: 'The maintenance operation was executed successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: 'The request was rejected due to a validation error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 'An authentication error occurred/invalid credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 'Access to this resource is fordidden.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 'Transaction was not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -
          basicAuth: []
  /order:
    post:
      tags:
        - Payments
      summary: 'Creates an order and a transaction based on payment details'
      description: "This service allows you to execute transactions through API with no need to redirect your customer to the payment page hosted by HiPay. This service supports payments with credit or debit cards as well as alternative payment methods.\nIn **order** to make a payment with a credit or debit card, a token must have been generated beforehand. In fact, this service cannot receive credit or debit card numbers in clear. Instead, you must provide this service with a token associated to a card number. Use the HiPay Enterprise SDK for JavaScript in order to generate tokens.\nIf you need to make payments with alternative payment methods, you can use this service directly. Note that the use of some alternative payment products implies that you redirect your user to an external URL. In such a case, the `forwardUrl` parameter will be set with the appropriate URL. Moreover, the activation of *3-D Secure* also implies a redirection of your customer."
      operationId: requestNewOrder
      requestBody:
        description: 'Order information'
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputOrder'
      responses:
        '200':
          description: 'Order successfully created and transaction executed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: 'The request was rejected due to a validation error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 'An authentication error occurred/invalid credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 'Access to this resource is fordidden.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -
          basicAuth: []
  '/transaction/{transaction_reference}':
    get:
      tags:
        - Transaction
      summary: 'Gets details of existing transactions based on a transaction ID'
      description: 'Gets details of existing transactions based on a transaction ID.'
      operationId: getTransactionByReference
      parameters:
        -
          name: transaction_reference
          in: path
          description: 'The unique identifier of the transaction.'
          required: true
          schema:
            type: string
          example: '800000420435'
      responses:
        '200':
          description: 'Transaction retrieved successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
        '400':
          description: 'The request was rejected due to a validation error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 'An authentication error occurred/invalid credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 'Access to this resource is fordidden.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -
          basicAuth: []
  /transaction:
    get:
      tags:
        - Transaction
      summary: 'Gets details of existing transactions related to a given order'
      description: 'Gets details of existing transactions related to a given order.'
      operationId: getTransactionsByReference
      parameters:
        -
          name: orderid
          in: query
          description: 'Merchant unique order id. Return all the transactions related to an order id.'
          required: true
          schema:
            type: string
          example: ORDER_1487239265080
      responses:
        '200':
          description: 'Transactions retrieved successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
        '400':
          description: 'The request was rejected due to a validation error.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 'An authentication error occurred/invalid credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: 'Access to this resource is fordidden.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        -
          basicAuth: []
components:
  schemas:
    Forward:
      title: Forward
      description: Forward
      properties:
        forwardUrl:
          description: ''
          type: string
          example: 'https://stage-secure-gateway.hipay-tpp.com/payment/web/pay/df4d20da-7b6f-4fed-8603-c4ed3dca48'
        mid:
          description: ''
          type: string
          example: '00001326589'
        order:
          $ref: '#/components/schemas/OrderResponse'
      type: object
    hpayment:
      title: HPayment
      description: 'HPayment model'
      required:
        - orderid
        - operation
        - description
        - currency
        - amount
        - accept_url
        - decline_url
        - pending_url
        - exception_url
        - cancel_url
        - firstname
        - lastname
        - eci
      properties:
        payment_product_list:
          description: "The list of payment products to display on the payment page.<br/>\n                        <br/>`visa`, `mastercard`, `maestro`, `cb`, `3xcb`, `3xcb-no-fees`, `4xcb`, `4xcb-no-fees`, `american-express`, `bank-transfer`, `bcmc`,\n                        `bcmc-mobile`, `cbc-online`, `dexia-directnet`, `giropay`, `ideal`, `ing-homepay`, `kbc-online`, `klarnainvoice`, `paypal`, `paysafecard`,\n                        `payulatam`, `przelewy24`, `qiwi-wallet`, `sdd`, `sisal`, `sofort-uberweisung`, `yandex`, `aura`, `boleto-bancario`, `oxxo`"
          type: string
          example: 'mastercard,visa,american-express'
        payment_product_category_list:
          description: "The categories of payment products to be displayed on the payment page.<br/>\n                        <br/>`credit-card`, `debit-card`, `realtime-banking`, `ewallet`"
          type: string
          default: credit-card
          enum:
            - credit-card
            - debit-card
            - realtime-banking
            - ewallet
          example: credit-card
        css:
          description: 'URL to merchant style sheet. **HTTPS protocol is required.**'
          type: string
          example: 'https://developer.hipay.com/misc/simulator/css2.css'
        template:
          description: "The template name. Possible values:\n  - `basic-js` for a full page redirection\n  - `iframe-js` for an iframe integration"
          type: string
          enum:
            - basic-js
            - iframe-js
          example: basic-js
        merchant_display_name:
          description: 'The merchant name displayed on payment page, otherwise the name is retrieved from order.'
          type: string
          example: 'ACME Consolidated'
        display_selector:
          description: "Enable/disable the payment products selector. Possible values:\n  - `0`: the selector is not displayed\n  - `1`: the selector is displayed"
          type: integer
          enum:
            - 0
            - 1
          example: '0'
        multi_use:
          description: "Indicates the tokenization module whether the payment card token should be generated either for a single-use or a multi-use.\n                        Possible values:\n  - `1`: Generates a multi-use token\n  - `0`: Generates a single-use token\n    While a single-use token is typically generated for a short time and for processing a single transaction, multi-use tokens are generally generated"
          type: integer
          enum:
            - 0
            - 1
          example: '0'
        time_limit_to_pay:
          description: 'The time limit to pay allows you to specify the validity period of a payment page in seconds starting from the moment the payment link (forwardUrl) is generated. If empty, default value is fixed to 7 days. Max value: 24 days (2140000 seconds).'
          type: string
          example: '1800'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Common'
        -
          $ref: '#/components/schemas/Order'
    Maintenance:
      title: Maintenance
      description: 'Maintenance model'
      required:
        - operation
      properties:
        operation:
          description: 'The operation to perform on the transaction.'
          type: string
          enum:
            - capture
            - refund
            - cancel
            - acceptChallenge
            - denyChallenge
          example: capture
        amount:
          description: 'Amount is required for partial maintenances. Do not specify amount for full captures or refunds.'
          type: string
          example: '3.5'
        operation_id:
          description: "Operation merchant ID. This value will be returned to merchant with the notifications related to this operation.\n    <br />The payment gateway supports the following types of maintenance transactions.\n    <br />\n    <table>\n    <thead><td>Operation Type</td><td>Description</td></thead>\n    <tbody>\n    <tr><td>`capture` </td><td>A request instructing the payment gateway to capture a previously-authorized transaction, i.e. transfer the funds from the customer's bank account to the merchant's bank account. This transaction is always preceded by an authorization.</td></tr>\n    <tr><td>`refund` </td><td>A request instructing the payment gateway to refund a previously captured transaction. A captured transaction can be partly or fully refunded. </td></tr>\n    <tr><td>`cancel` </td><td>A request instructing the payment gateway to cancel a previously authorized transaction. Only authorized transactions can be cancelled, captured transactions must be refunded. </td></tr>\n    <tr><td>`acceptChallenge` </td><td>A request instructing the payment gateway to accept a previously challenged transaction.</td></tr>\n    <tr><td>`denyChallenge` </td><td>A request instructing the payment gateway to deny a previously challenged transaction/td></tr>\n    </tbody>\n    </table>"
          type: string
          example: 204OJ23LKJ234
      type: object
    Operation:
      title: Operation
      description: 'Operation model'
      properties:
        operation:
          description: 'The operation to perform on the transaction.'
          type: string
          enum:
            - capture
            - refund
            - cancel
            - acceptChallenge
            - denyChallenge
          example: capture
        mid:
          description: ''
          type: string
          example: '00001326589'
        authorizationCode:
          description: ''
          type: string
          example: author
        status:
          description: ''
          type: string
          example: '118'
        message:
          description: ''
          type: string
          example: Captured
        dateCreated:
          description: ''
          type: string
          example: '2019-02-07T10:07:09+0000'
        dateUpdated:
          description: ''
          type: string
          example: '2019-02-07T10:07:09+0000'
        dateAuthorized:
          description: ''
          type: string
          example: '2019-02-07T10:07:09+0000'
        authorizedAmount:
          description: ''
          type: string
          example: '125.85'
        capturedAmount:
          description: ''
          type: string
          example: '125.85'
        refundedAmount:
          description: ''
          type: string
          example: '0.00'
        currency:
          description: ''
          type: string
          example: EUR
      type: object
    Error:
      title: Error
      description: 'Error model'
      properties:
        code:
          description: Code
          type: integer
        message:
          description: Message
          type: string
        description:
          description: Description
          type: string
      type: object
    TransactionDetail:
      title: 'Transaction detail'
      description: 'Transaction detail'
      properties:
        transaction:
          description: ''
          type: object
          allOf:
            -
              $ref: '#/components/schemas/Transaction'
      type: object
    Common:
      title: Common
      description: 'Common model'
      properties:
        orderid:
          description: 'Unique order ID.'
          type: string
          example: ORDER_1537532589263
          x-uniqId: true
        operation:
          description: "Transaction type:\n  - **`Sale`** indicates that the transaction is automatically submitted for capture.\n  - **`Authorization`** indicates that this transaction is sent for authorization only."
          type: string
          default: Authorization
          enum:
            - Authorization
            - Sale
          example: Authorization
        description:
          description: 'The order short description.'
          type: string
          example: 'A super short description here.'
        long_description:
          description: 'Additional order description. You can show this description in HiPay payment page if desired.'
          type: string
          example: 'A super long description here...'
        currency:
          description: 'Base currency for this order. This three-character currency code complies with ISO 4217.'
          type: string
          default: EUR
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTN
            - BWP
            - BYR
            - BZD
            - CAD
            - CDF
            - CHF
            - CLP
            - CNY
            - COP
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SPL
            - SRD
            - STD
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TVD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WST
            - XAF
            - XCD
            - XDR
            - XOF
            - XPF
            - YER
            - ZAR
            - ZMW
            - ZWD
        amount:
          description: 'Total order amount, calculated as the sum of purchased items, plus shipping fees (if present), plus tax fees (if present).'
          type: number
          minimum: 1
          example: 125.75
        shipping:
          description: 'The order shipping fee. It can be omitted if the shipping fee value is zero.'
          type: number
          example: 1.3
        tax:
          description: 'The order tax fee. It can be omitted if the order tax value is zero.'
          type: number
          example: 1.1
        tax_rate:
          description: 'The order tax rate.'
          type: number
          example: 1
        cid:
          description: 'Merchant''s customer id. For fraud detection reasons.'
          type: string
          example: '283749291'
        ipaddr:
          description: 'The IP address of your customer making a purchase.'
          type: string
          example: 127.0.0.1
        accept_url:
          description: 'The URL to return your customer to once the payment process is completed successfully.<br/>For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).'
          type: string
          example: 'https://developer.hipay.com/simulator/success/'
        decline_url:
          description: 'The URL to return your customer to after the acquirer declines the payment.<br/>For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).'
          type: string
          example: 'https://developer.hipay.com/simulator/decline/'
        pending_url:
          description: 'The URL to return your customer to when the payment request was submitted to the acquirer but response is not yet available.<br/>For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).'
          type: string
          example: 'https://developer.hipay.com/simulator/pending/'
        exception_url:
          description: 'The URL to return your customer to after a system failure.<br/>For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).'
          type: string
          example: 'https://developer.hipay.com/simulator/exception/'
        cancel_url:
          description: 'The URL to return your customer to after a system failure.<br/>For more information about the user redirection workflow, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#redirect-pages).'
          type: string
          example: 'https://developer.hipay.com/simulator/cancel/'
        http_accept:
          description: 'This element should contain the exact content of the HTTP Accept header as sent to the merchant from the customer''s browser.'
          type: string
          example: '*\/*'
        http_user_agent:
          description: 'This element should contain the exact content of the HTTP User-Agent header as sent to the merchant from the customer''s browser.'
          type: string
          example: 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)'
        device_fingerprint:
          description: 'This element should contain the value of the ''ioBB'' hidden field.<br/>For more information about the device fingerprint integration, check the [HiPay Enterprise Overview](/getting-started/platform-hipay-enterprise/overview/#device-fingerprint-integration).'
          type: string
          example: 042q0aAXOogFCkNMNf94lis1ztsdwpJAn3AFS6wesUIr2q
        language:
          description: 'Locale code of your customer. This will be used to display payment page in correct language.'
          type: string
          example: en_GB
        custom_data:
          description: 'Custom data. You can use these parameters to submit custom values you wish to show in HiPay back office transaction details, receive back in the API response messages, in the notifications or to activate specific FPS rules. Please note that cdata have been deprecated. If you are still using them, they can’t be combined with custom data. We thus recommend migrating to custom data as soon as possible.'
          type: string
          example: '{''kk'':''ll''}'
        eci:
          description: '**This parameter is specific to SEPA Direct Debit as well as credit or debit card payment products.**'
          type: string
          default: '7'
          enum:
            - '1'
            - '2'
            - '7'
            - '10'
          example: 7
        authentication_indicator:
          description: '**This parameter is specific to SEPA Direct Debit as well as credit or debit card payment products.**'
          type: string
          default: '0'
          enum:
            - '0'
            - '1'
            - '2'
          example: 0
      type: object
    Order:
      title: Order
      description: 'Order model'
      properties:
        email:
          description: 'The customer''s e-mail address.'
          type: string
          example: john.doe@foobar99.com
        phone:
          description: 'The customer''s phone number.'
          type: string
          example: '330123456789'
        birthdate:
          description: 'Birth date of the customer (YYYYMMDD). For fraud detection reasons.'
          type: string
          example: '19880612'
        gender:
          description: "Gender of the customer:\n    - M:male\n    - F:female\n    - U:unknown"
          type: string
          enum:
            - U
            - F
            - M
          example: U
        firstname:
          description: 'The customer''s first name. This value will be use to pre-fill cardholder name on credit card payment form.'
          type: string
          example: Cathy
        lastname:
          description: 'The customer''s last name. This value will be use to pre-fill cardholder name on credit card payment form.'
          type: string
          example: Doe
        recipientinfo:
          description: 'Additional information about the customer (e.g., quality or function, company name, department, etc.).'
          type: string
          example: Dr.
        streetaddress:
          description: 'Street address of the customer.'
          type: string
          example: '101 Rue de Rivoli'
        streetaddress2:
          description: 'Additional address information of the customer (e.g., building, floor, flat, etc.).'
          type: string
          example: 'Immeuble B'
        city:
          description: 'The customer''s city.'
          type: string
          example: Paris
        state:
          description: 'The USA state or the Canada state of the customer making the purchase. Send this information only if the address country of the customer is US (USA) or CA (Canada).'
          type: string
        zipcode:
          description: 'The zip or postal code of the customer.'
          type: string
          example: '75001'
        country:
          description: 'The zip or postal code of the customer.'
          type: string
          example: FR
        shipto_firstname:
          description: 'The first name of the order recipient.'
          type: string
          example: Cathy
        shipto_lastname:
          description: 'The last name of the order recipient.'
          type: string
          example: Doe
        shipto_recipientinfo:
          description: 'Additional information about the order recipient (e.g., quality or function, company name, department, etc.).'
          type: string
          example: Dr.
        shipto_streetaddress:
          description: 'Street address to which the order is to be shipped.'
          type: string
          example: '101 Rue de Rivoli'
        shipto_streetaddress2:
          description: 'The additional information about address to which the order is to be shipped (e.g., building, floor, flat, etc.).'
          type: string
          example: 'Immeuble B'
        shipto_city:
          description: 'The city to which the order is to be shipped.'
          type: string
          example: Paris
        shipto_state:
          description: 'The USA state or Canada state to which the order is being shipped. Send this information only if the shipping country is US (USA) or CA (Canada).'
          type: string
        shipto_zipcode:
          description: 'The zip or postal code to which the order is being shipped.'
          type: string
          example: '75001'
        shipto_country:
          description: 'Country code to which the order is being shipped. This two-letter country code complies with ISO 3166-1 (alpha 2).'
          type: string
          example: FR
      type: object
    InputOrder:
      title: InputOrder
      description: 'InputOrder model'
      required:
        - orderid
        - operation
        - payment_product
        - description
        - currency
        - amount
        - accept_url
        - decline_url
        - pending_url
        - exception_url
        - cancel_url
        - firstname
        - lastname
        - eci
      properties:
        payment_product:
          description: 'The payment method used to proceed checkout. Depending on the payment product, parameters specific to the payment method are required. The list of payment products to display on the payment page.'
          type: string
          enum:
            - visa
            - mastercard
            - maestro
            - cb
            - 3xcb
            - 3xcb-no-fees
            - 4xcb
            - 4xcb-no-fees
            - american-express
            - bank-transfer
            - bcmc
            - bcmc-mobile
            - cbc-online
            - dexia-directnet
            - giropay
            - ideal
            - ing-homepay
            - kbc-online
            - klarnainvoice
            - paypal
            - paysafecard
            - payulatam
            - przelewy24
            - qiwi-wallet
            - sdd
            - sisal
            - sofort-uberweisung
            - yandex
            - aura
            - boleto-bancario
            - oxxo
          example: visa
        issuer_bank_id:
          description: "**This parameter is specific to the iDEAL and the SEPA Direct Debit payment products.**\n                        <br />This is the Business Identifier Code (BIC) of the customer's issuer bank."
          type: string
          example: BNPAFRPPXXX
        qiwiuser:
          description: "**This parameter is specific to the Qiwi Wallet payment product.**\n                        <br />The Qiwi user's ID, to whom the invoice is issued. It is the user's phone number, in international format."
          type: string
          example: '33670985712'
        shipto_gender:
          description: '**This parameter is specific to the 3x and 4x Carte Bancaire payment products.**'
          type: string
          example: U
        shipto_phone:
          description: "**This parameter is specific to the 3x and 4x Carte Bancaire payment products.**\n                        <br />The customer's ship-to phone number."
          type: string
          example: '33112345678'
        shipto_msisdn:
          description: "**This parameter is specific to the 3x and 4x Carte Bancaire payment products.**\n                        <br />The customer's ship-to mobile phone number."
          type: string
          example: '33112345678'
        order_category_code:
          description: "**This parameter is specific to the 3x and 4x Carte Bancaire payment products.**\n                        <br />The customer's ship-to mobile phone number."
          type: integer
          enum:
            - '5499'
            - '5571'
            - '7929'
            - '5261'
            - '5200'
            - '7278'
            - '5193'
            - '5734'
            - '7298'
            - '0'
            - '7361'
            - '5941'
            - '5651'
            - '4722'
            - '5946'
            - '4812'
          example: '5941'
        delivery_date:
          description: "**This parameter is specific to the 3x and 4x Carte Bancaire payment products.**\n                        <br />Estimated delivery date. Format is YYYY-MM-DD."
          type: string
          example: '2022-12-20'
        delivery_method:
          description: "**This parameter is specific to the 3x and 4x Carte Bancaire payment products.**`\n                        <br />The delivery method."
          type: string
          enum:
            - CARRIER
            - STORE24H
            - CARRIER24H
            - RELAYPOINT
          example: CARRIER
        carrier_description:
          description: "**This parameter is specific to the 3x and 4x Carte Bancaire payment products.**\n                        <br />Carrier description."
          type: string
        recurring_payment:
          description: '**This parameter is specific to the SEPA Direct Debit payment product.**'
          type: string
          default: '0'
          enum:
            - '0'
            - '1'
          example: '0'
        iban:
          description: "**This parameter is specific to the SEPA Direct Debit payment product.**\n                        <br />International Bank Account Number (IBAN)."
          type: string
          example: FR1420041010050500013M02606
        bank_name:
          description: "**This parameter is specific to the SEPA Direct Debit payment product.**\n                        <br/>Issuer Bank Name."
          type: string
          example: BNP
        cardtoken:
          description: "**This parameter is specific to credit or debit card payment products.**\n    <br/>This is the token obtained from the HiPay Enterprise Secure Vault API when tokenizing a credit or debit card. To generate a token, please refer to the HiPay Enterprise Tokenization API documentation."
          type: string
          example: f39bfab2b6c96fa30dcc0e55aa3da4125a49ab03
      type: object
      allOf:
        -
          $ref: '#/components/schemas/Common'
        -
          $ref: '#/components/schemas/Order'
    OrderResponse:
      title: 'Order Response'
      description: 'Order Response model'
      properties:
        id:
          description: ''
          type: string
          example: '1549547828947'
        dateCreated:
          description: ''
          type: string
          example: '2019-02-07T13:57:08+0000'
        attempts:
          description: ''
          type: string
          example: '0'
        amount:
          description: ''
          type: string
          example: '125.75'
        shipping:
          description: ''
          type: string
          example: '0'
        tax:
          description: ''
          type: string
          example: '1.10'
        decimals:
          description: ''
          type: string
          example: '2'
        currency:
          description: ''
          type: string
          example: EUR
        customerId:
          description: ''
          type: string
          example: '283749291'
        language:
          description: ''
          type: string
          example: en_GB
        email:
          description: ''
          type: string
          example: john.doe@foobar99.com
      type: object
    debitAgreement:
      title: 'Debit Agreement'
      description: 'Debit Agreement model'
      properties:
        id:
          type: string
        status:
          type: string
      type: object
    paymentMethod:
      title: Payment
      description: 'Payment model'
      properties:
        token:
          description: ''
          type: string
        brand:
          description: ''
          type: string
        pan:
          description: ''
          type: string
        cardHolder:
          description: ''
          type: string
          example: 'JOHN DOE'
        cardExpiryMonth:
          description: ''
          type: string
          example: '03'
        cardExpiryYear:
          description: ''
          type: string
          example: '2020'
        issuer:
          description: "Name of the financial institution that\nissued the payment method."
          type: string
        country:
          description: 'The country code where payment method was issued.'
          type: string
          example: US
      type: object
    Transaction:
      title: Transaction
      description: 'Transaction model'
      properties:
        authorizationCode:
          description: ''
          type: string
          example: author
        dateCreated:
          description: ''
          type: string
          example: '2019-02-07T10:07:09+0000'
        dateAuthorized:
          description: ''
          type: string
          example: '2019-02-07T10:07:09+0000'
        authorizedAmount:
          description: ''
          type: string
          example: '125.85'
        currency:
          description: ''
          type: string
          example: EUR
        ipAddress:
          description: ''
          type: string
          example: 0.0.0.0
        ipCountry:
          description: ''
          type: string
          example: 0.0.0.0
        avsResult:
          description: ''
          type: string
        cvcResult:
          description: ''
          type: string
        threeDSecure:
          $ref: '#/components/schemas/ThreeDSecure'
      type: object
      allOf:
        -
          $ref: '#/components/schemas/OrderResponse'
        -
          properties:
            transactionReference:
              description: 'Unique Transaction Identifier.'
              type: string
              example: '800000790677'
            attemptId:
              description: 'Attempt identifier.'
              type: integer
              example: '1'
            dateUpdated:
              description: "Date of last status change.\n\nThis date must comply with ISO 8601."
              type: string
            state:
              description: 'Transaction state.'
              type: string
            referenceToPay:
              description: 'Reference to pay.'
              type: string
            mid:
              description: "Merchant id (MID).\n\nUnique identifier assigned to the merchant."
              type: integer
            capturedAmount:
              description: 'Captured amount.'
              type: string
              example: '125.75'
            refundedAmount:
              description: 'Refunded amount.'
              type: string
              example: '00.00'
            creditedAmount:
              description: 'Total credited.'
              type: string
            paymentProduct:
              description: 'The payment product used for processing current transaction.'
              type: string
              example: visa
            paymentMethod:
              $ref: '#/components/schemas/paymentMethod'
            status:
              description: 'Transaction status.'
              type: integer
              example: completed
            reason:
              $ref: '#/components/schemas/reason'
            forwardUrl:
              description: 'URL of the page on which to redirect the customer.'
              type: string
            deviceId:
              description: ''
              type: string
            fraudScreening:
              $ref: '#/components/schemas/fraud'
            eci:
              description: "Electronic Commerce Indicator (ECI).\n\nThe Electronic Commerce Indicator (ECI) is used by acquirers/issuers\nto determine the type of transaction being processed. The ECI value\nshould represent the source of the transaction request. That is, the\nenvironment that the cardholder used to provide the payment card details\nto the merchant. It is important that merchants set the correct ECI\nvalue during transaction processing to ensure that appropriate merchant\nservice rates are received."
              type: integer
              example: '7'
            debitAgreement:
              $ref: '#/components/schemas/debitAgreement'
            message:
              type: string
    ThreeDSecure:
      title: ThreeDSecure
      description: 'ThreeDSecure model'
      properties:
        eci:
          description: ''
          type: string
          example: '6'
        enrollmentStatus:
          description: ''
          type: string
          example: 'N'
        enrollmentMessage:
          description: ''
          type: string
          example: 'Cardholder Not Enrolled'
        authenticationStatus:
          description: ''
          type: string
          example: ''
        authenticationMessage:
          description: ''
          type: string
          example: ''
        authenticationToken:
          description: ''
          type: string
          example: ''
        xid:
          description: ''
          type: string
          example: ''
      type: object
    reason:
      title: Reason
      description: 'Reason model'
      properties:
        code:
          description: ''
          type: string
        message:
          description: ''
          type: string
      type: object
    fraud:
      title: 'Fraud screening'
      description: 'Fraud screening model'
      properties:
        scoring:
          description: ''
          type: string
          example: '0'
        result:
          description: ''
          type: string
          example: ACCEPTED
        review:
          description: ''
          type: string
          example: ''
      type: object
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
tags:
  -
    name: payments
    description: 'Everything you need to create orders and transactions'
  -
    name: maintenance
    description: 'Perform operations (capture, refund) on transactions'
  -
    name: transaction
    description: 'Request all the details of existing transactions and orders'
externalDocs:
  description: 'Find out more about HiPay'
  url: 'https://developer.hipay.com/'
